

var ConnectionPool = require('tedious-connection-pool');
var Request = require('tedious').Request;
var Q = require('q');

function DbConnectCallback(error,results){};

    var config = {
        userName: 'M3tech!@ncn55muurk',
        password: 'r@fdM3Al!',
        server: 'ncn55muurk1.database.windows.net',
         tdsVersion: '7_2',
            options: {
                encrypt: true,
                database: 'm3_Fed_Root',
        
            debug: {
               packet:  true,
               data:    true,
               payload: true,
               log:     true 
        }
    }
 
};


var poolConfig = {
   min: 1,
   max: 30,
   idleTimeoutMillis: 10000
};


 pool = new ConnectionPool(poolConfig, config);

 function GetDbConnection(operatorid) {
 
     var deferred = Q.defer(); 
     pool.requestConnection(function (err, connection) {
         
         if(err) {
         	//DbConnectCallback(err,null);
          console.log(err);
          deferred.reject(new Error(err));
          } else {
         	console.log('connected from pool');

             var request = new Request('use federation [OperatorFederation] ([OperatorID]=' + operatorid + ') with reset,filtering=on', function(err, rowCount) {
             if(err) {
                console.log('Federation error: ' + err);
                DbConnectCallback(err,null);
                deferred.reject(new Error(err));

             } else {
                  console.log('changed fed');
                  //DbConnectCallback(null,connection);
                  deferred.resolve(connection);


             }
      });
           
              connection.on('connect', function(err) {
              connection.execSqlBatch(request);
          });

          connection.on('end', function(err){
              console.log('Connection closed') ;
          });

          connection.on('errorMessage',function(err) {
               console.log(err);
              deferred.reject(err);
          });

              

         }





     });


   return deferred.promise;
 } exports.GetDbConnection = GetDbConnection;
 ;